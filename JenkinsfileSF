#!/usr/bin/env groovy

node {

    def SF_CONSUMER_KEY=env.SF_CONSUMER_KEY
    def SF_USERNAME=env.SF_USERNAME
    def SERVER_KEY_CREDENTALS_ID=env.SERVER_KEY_CREDENTALS_ID
    def TEST_LEVEL='RunLocalTests'
    def PACKAGE_NAME='0Ho1U000000CaUzSAK'
    def PACKAGE_VERSION
    def SF_INSTANCE_URL = env.SF_INSTANCE_URL ?: "https://login.salesforce.com"
    
    // -------------------------------------------------------------------------
    // Check out code from source control.
    // -------------------------------------------------------------------------

    stage('checkout source') {
        checkout scm
    }
    
    stage('compupdate') {
        def GIT_BRANCH=sh(returnStdout: true, script: 'git ls-remote --heads origin | grep $(git rev-parse HEAD) | cut -d / -f 3').trim()
        def GIT_URL=sh(returnStdout: true, script: 'git config --get remote.origin.url').trim()
        def GIT_COMMIT=sh(returnStdout: true, script: 'git log -1 --oneline | cut -f1 -d" "').trim()  
        def COMPONENT_APPLICATION='GLOBAL.ortelius.saas.ortelius'
        def COMPONENT_NAME='GLOBAL.ortelius.saas.webadmin_engine'
        def COMPONENT_VERSION='9.0.0'
        def COMPONENT_VERSION_COMMIT='v${COMPONENT_VERSION}.${env.BUILD_NUMBER}-g${GIT_COMMIT}'

        rc = command "echo dh updatecomp --dhurl https://console.deployhub.com --appname ${COMPONENT_APPLICATION} --compname ${COMPONENT_NAME} --compvariant ${GIT_BRANCH} --compversion '${COMPONENT_VERSION_COMMIT}' --appautoinc --compautoinc --compattr GitCommit:${GIT_COMMIT} --compattr GitUrl:${GIT_URL} --compattr GitBranch:${GIT_BRANCH} --compattr BuildId:${env.BUILD_NUMBER} --compattr BuildUrl:${env.BUILD_URL}"
        if (rc != 0) {
                    error 'Salesforce install scratch org display failed.'
                }
            }
}

def command(script) {
    if (isUnix()) {
        return sh(returnStatus: true, script: script);
    } else {
        return bat(returnStatus: true, script: script);
    }
}
